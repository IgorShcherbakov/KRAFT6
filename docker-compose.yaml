version: '3'

x-kafka-common: &kafka-common
  image: confluentinc/cp-kafka:7.4.4
  networks:
    - kafka-network
  environment: &kafka-common-env
    KAFKA_DEFAULT_REPLICATION_FACTOR: 3
    KAFKA_MIN_INSYNC_REPLICAS: 2
    KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    KAFKA_DELETE_TOPIC_ENABLE: "true"
    KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
    KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: SASL_PLAINTEXT:SASL_PLAINTEXT,SSL:SSL,EXTERNAL_SASL:SASL_SSL
    KAFKA_INTER_BROKER_LISTENER_NAME: SASL_PLAINTEXT
    KAFKA_LISTENER_NAME_BROKER_SASL_ENABLED_MECHANISMS: PLAIN
    KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
    KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
    KAFKA_ZOOKEEPER_SASL_CLIENT: true
    KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: "HTTPS"
    KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
    KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "false"
    KAFKA_SUPER_USERS: User:admin
    KAFKA_HEAP_OPTS: "-Xmx512M -Xms256M"

services:
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    restart: always
    container_name: kafka-ui
    depends_on:
      - zookeeper
      - kafka-0
      - kafka-1
      - kafka-2
      - target-zookeeper
      - target-kafka-0
      - target-kafka-1
      - target-kafka-2
    ports:
      - "8080:8080"
    networks:
      - kafka-network
    environment:
      # source cluster
      KAFKA_CLUSTERS_0_NAME: source-cluster
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-0:9090,kafka-1:9092,kafka-2:9094
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      KAFKA_CLUSTERS_0_PROPERTIES_SECURITY_PROTOCOL: SASL_PLAINTEXT
      KAFKA_CLUSTERS_0_PROPERTIES_SASL_MECHANISM: PLAIN
      KAFKA_CLUSTERS_0_PROPERTIES_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.plain.PlainLoginModule required username=admin password=admin-secret;"
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: "http://schema-registry:8081"

      # target custer
      KAFKA_CLUSTERS_1_NAME: target-cluster
      KAFKA_CLUSTERS_1_BOOTSTRAPSERVERS: target-kafka-0:10090,target-kafka-1:10092,target-kafka-2:10094
      KAFKA_CLUSTERS_1_ZOOKEEPER: target-zookeeper:2182
      KAFKA_CLUSTERS_1_PROPERTIES_SECURITY_PROTOCOL: SASL_PLAINTEXT
      KAFKA_CLUSTERS_1_PROPERTIES_SASL_MECHANISM: PLAIN
      KAFKA_CLUSTERS_1_PROPERTIES_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.plain.PlainLoginModule required username=admin password=admin-secret;"
      KAFKA_CLUSTERS_1_SCHEMAREGISTRY: "http://schema-registry:8081"
  
  schema-registry:
    image: confluentinc/cp-schema-registry:7.4.4
    container_name: schema-registry
    depends_on:
      - kafka-0
      - kafka-1
      - kafka-2
    ports:
      - "8081:8081"
    networks:
      - kafka-network
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "SASL_PLAINTEXT://kafka-0:9090,SASL_PLAINTEXT://kafka-1:9092,SASL_PLAINTEXT://kafka-2:9094"
      SCHEMA_REGISTRY_HOST_NAME: "schema-registry"
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8081"
      SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL: "SASL_PLAINTEXT"
      SCHEMA_REGISTRY_KAFKASTORE_SASL_MECHANISM: "PLAIN"
      SCHEMA_REGISTRY_KAFKASTORE_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.plain.PlainLoginModule required username='admin' password='admin-secret';"
  schema-registrar:
    image: alpine:latest
    container_name: schema-registrar
    depends_on:
      - schema-registry
    networks:
      - kafka-network
    volumes:
      - ./scripts/register-schema.sh:/usr/bin/register-schema.sh
    entrypoint: ["sh", "-c", "apk add --no-cache bash curl && chmod +x /usr/bin/register-schema.sh && /usr/bin/register-schema.sh"]

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    restart: always
    container_name: zookeeper   
    hostname: zookeeper
    ports:
      - "2181:2181"
    volumes:
      - data-zookeeper-log-1:/var/lib/zookeeper/log
      - data-zookeeper-data-1:/var/lib/zookeeper/data
      - ./creds/zookeeper-creds:/etc/zookeeper/secrets
    networks:
      - kafka-network
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      KAFKA_OPTS: -Djava.security.auth.login.config=/etc/zookeeper/secrets/zookeeper.sasl.jaas.conf
        -Dzookeeper.authProvider.1=org.apache.zookeeper.server.auth.SASLAuthenticationProvider
        -Dzookeeper.allowSaslFailedClients=false
        -Dzookeeper.requireClientAuthScheme=sasl
  kafka-0:
    <<: *kafka-common
    restart: always
    container_name: kafka-0
    hostname: kafka-0
    depends_on:
      - zookeeper
    ports:
      - "9090:9090"
      - "9091:9091"
      - "9010:9010"
    volumes:
      - data-kafka-0:/var/lib/kafka/data
      - ./creds/kafka-0-creds:/etc/kafka/secrets
    environment:
      <<: *kafka-common-env
      KAFKA_BROKER_ID: 0
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: SASL_PLAINTEXT://0.0.0.0:9090,SSL://0.0.0.0:9091,EXTERNAL_SASL://0.0.0.0:9010
      KAFKA_ADVERTISED_LISTENERS: SASL_PLAINTEXT://kafka-0:9090,SSL://kafka-0:9091,EXTERNAL_SASL://kafka-0:9010
      KAFKA_SSL_KEYSTORE_FILENAME: kafka.kafka-0.keystore.pkcs12
      KAFKA_SSL_KEYSTORE_CREDENTIALS: kafka-0_keystore_creds
      KAFKA_SSL_KEY_CREDENTIALS: kafka-0_sslkey_creds
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.kafka-0.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: kafka-0_truststore_creds
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/secrets/kafka-0.sasl.jaas.conf"
  kafka-1:
    <<: *kafka-common
    restart: always
    container_name: kafka-1
    hostname: kafka-1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9093:9093"
      - "9011:9011"
    volumes:
      - data-kafka-1:/var/lib/kafka/data
      - ./creds/kafka-1-creds:/etc/kafka/secrets
    environment:
      <<: *kafka-common-env
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: SASL_PLAINTEXT://0.0.0.0:9092,SSL://0.0.0.0:9093,EXTERNAL_SASL://0.0.0.0:9011
      KAFKA_ADVERTISED_LISTENERS: SASL_PLAINTEXT://kafka-1:9092,SSL://kafka-1:9093,EXTERNAL_SASL://kafka-1:9011
      KAFKA_SSL_KEYSTORE_FILENAME: kafka.kafka-1.keystore.pkcs12
      KAFKA_SSL_KEYSTORE_CREDENTIALS: kafka-1_keystore_creds
      KAFKA_SSL_KEY_CREDENTIALS: kafka-1_sslkey_creds
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.kafka-1.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: kafka-1_truststore_creds
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/secrets/kafka-1.sasl.jaas.conf"
  kafka-2:
    <<: *kafka-common
    restart: always
    container_name: kafka-2
    hostname: kafka-2
    depends_on:
      - zookeeper
    ports:
      - "9094:9094"
      - "9095:9095"
      - "9012:9012"
    volumes:
      - data-kafka-2:/var/lib/kafka/data
      - ./creds/kafka-2-creds:/etc/kafka/secrets
    environment:
      <<: *kafka-common-env
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: SASL_PLAINTEXT://0.0.0.0:9094,SSL://0.0.0.0:9095,EXTERNAL_SASL://0.0.0.0:9012
      KAFKA_ADVERTISED_LISTENERS: SASL_PLAINTEXT://kafka-2:9094,SSL://kafka-2:9095,EXTERNAL_SASL://kafka-2:9012
      KAFKA_SSL_KEYSTORE_FILENAME: kafka.kafka-2.keystore.pkcs12
      KAFKA_SSL_KEYSTORE_CREDENTIALS: kafka-2_keystore_creds
      KAFKA_SSL_KEY_CREDENTIALS: kafka-2_sslkey_creds
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.kafka-2.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: kafka-2_truststore_creds
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/secrets/kafka-2.sasl.jaas.conf"
  kafka-init:
    image: confluentinc/cp-kafka:7.4.4
    container_name: kafka-init
    depends_on:
      - kafka-0
      - kafka-1
      - kafka-2
    networks:
      - kafka-network
    volumes:
      - ./scripts/kafka-init.sh:/usr/bin/kafka-init.sh
      - ./scripts/wait-for-it.sh:/usr/bin/wait-for-it.sh
      - ./creds/kafka-0-creds:/etc/kafka/secrets
    environment:
      KAFKA_HEAP_OPTS: "-Xmx512M -Xms256M"
    entrypoint: ["sh", "-c", "/usr/bin/wait-for-it.sh kafka-0:9010 --timeout=60 --strict -- /usr/bin/wait-for-it.sh kafka-1:9011 --timeout=60 --strict -- /usr/bin/wait-for-it.sh kafka-2:9012 --timeout=60 --strict -- /usr/bin/kafka-init.sh"]
  
  target-zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    restart: always
    container_name: target-zookeeper   
    hostname: target-zookeeper
    ports:
      - "2182:2181"
    volumes:
      - target-data-zookeeper-log-1:/var/lib/zookeeper/log
      - target-data-zookeeper-data-1:/var/lib/zookeeper/data
      - ./creds/zookeeper-creds:/etc/zookeeper/secrets
    networks:
      - kafka-network
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2182
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      KAFKA_OPTS: -Djava.security.auth.login.config=/etc/zookeeper/secrets/zookeeper.sasl.jaas.conf
        -Dzookeeper.authProvider.1=org.apache.zookeeper.server.auth.SASLAuthenticationProvider
        -Dzookeeper.allowSaslFailedClients=false
        -Dzookeeper.requireClientAuthScheme=sasl
  target-kafka-0:
    <<: *kafka-common
    restart: always
    container_name: target-kafka-0
    hostname: target-kafka-0
    depends_on:
      - target-zookeeper
    ports:
      - "10090:10090"
      - "10091:10091"
      - "10010:10010"
    volumes:
      - target-data-kafka-0:/var/lib/kafka/data
      - ./creds/target-kafka-0-creds:/etc/kafka/secrets
    environment:
      <<: *kafka-common-env
      KAFKA_BROKER_ID: 0
      KAFKA_ZOOKEEPER_CONNECT: target-zookeeper:2182
      KAFKA_LISTENERS: SASL_PLAINTEXT://0.0.0.0:10090,SSL://0.0.0.0:10091,EXTERNAL_SASL://0.0.0.0:10010
      KAFKA_ADVERTISED_LISTENERS: SASL_PLAINTEXT://target-kafka-0:10090,SSL://target-kafka-0:10091,EXTERNAL_SASL://target-kafka-0:10010
      KAFKA_SSL_KEYSTORE_FILENAME: kafka.target-kafka-0.keystore.pkcs12
      KAFKA_SSL_KEYSTORE_CREDENTIALS: target-kafka-0_keystore_creds
      KAFKA_SSL_KEY_CREDENTIALS: target-kafka-0_sslkey_creds
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.target-kafka-0.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: target-kafka-0_truststore_creds
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/secrets/target-kafka-0.sasl.jaas.conf"
  target-kafka-1:
    <<: *kafka-common
    restart: always
    container_name: target-kafka-1
    hostname: target-kafka-1
    depends_on:
      - target-zookeeper
    ports:
      - "10092:10092"
      - "10093:10093"
      - "10011:10011"
    volumes:
      - target-data-kafka-1:/var/lib/kafka/data
      - ./creds/target-kafka-1-creds:/etc/kafka/secrets
    environment:
      <<: *kafka-common-env
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: target-zookeeper:2182
      KAFKA_LISTENERS: SASL_PLAINTEXT://0.0.0.0:10092,SSL://0.0.0.0:10093,EXTERNAL_SASL://0.0.0.0:10011
      KAFKA_ADVERTISED_LISTENERS: SASL_PLAINTEXT://target-kafka-1:10092,SSL://target-kafka-1:10093,EXTERNAL_SASL://target-kafka-1:10011
      KAFKA_SSL_KEYSTORE_FILENAME: kafka.target-kafka-1.keystore.pkcs12
      KAFKA_SSL_KEYSTORE_CREDENTIALS: target-kafka-1_keystore_creds
      KAFKA_SSL_KEY_CREDENTIALS: target-kafka-1_sslkey_creds
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.target-kafka-1.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: target-kafka-1_truststore_creds
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/secrets/target-kafka-1.sasl.jaas.conf"
  target-kafka-2:
    <<: *kafka-common
    restart: always
    container_name: target-kafka-2
    hostname: target-kafka-2
    depends_on:
      - target-zookeeper
    ports:
      - "10094:10094"
      - "10095:10095"
      - "10012:10012"
    volumes:
      - target-data-kafka-2:/var/lib/kafka/data
      - ./creds/target-kafka-2-creds:/etc/kafka/secrets
    environment:
      <<: *kafka-common-env
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: target-zookeeper:2182
      KAFKA_LISTENERS: SASL_PLAINTEXT://0.0.0.0:10094,SSL://0.0.0.0:10095,EXTERNAL_SASL://0.0.0.0:10012
      KAFKA_ADVERTISED_LISTENERS: SASL_PLAINTEXT://target-kafka-2:10094,SSL://target-kafka-2:10095,EXTERNAL_SASL://target-kafka-2:10012
      KAFKA_SSL_KEYSTORE_FILENAME: kafka.target-kafka-2.keystore.pkcs12
      KAFKA_SSL_KEYSTORE_CREDENTIALS: target-kafka-2_keystore_creds
      KAFKA_SSL_KEY_CREDENTIALS: target-kafka-2_sslkey_creds
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.target-kafka-2.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: target-kafka-2_truststore_creds
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/secrets/target-kafka-2.sasl.jaas.conf"
  target-kafka-init:
    image: confluentinc/cp-kafka:7.4.4
    container_name: target-kafka-init
    depends_on:
      - target-kafka-0
      - target-kafka-1
      - target-kafka-2
    networks:
      - kafka-network
    volumes:
      - ./scripts/target-kafka-init.sh:/usr/bin/target-kafka-init.sh
      - ./scripts/wait-for-it.sh:/usr/bin/wait-for-it.sh
      - ./creds/target-kafka-0-creds:/etc/kafka/secrets
    environment:
      KAFKA_HEAP_OPTS: "-Xmx512M -Xms256M"
    entrypoint: ["sh", "-c", "/usr/bin/wait-for-it.sh target-kafka-0:10010 --timeout=60  --strict -- /usr/bin/target-kafka-init.sh"]

  mirror-maker:
    image: confluentinc/cp-kafka:7.4.4
    restart: always
    container_name: mirror-maker
    depends_on:
      - kafka-0
      - kafka-1
      - kafka-2
      - zookeeper
      - target-kafka-0
      - target-kafka-1
      - target-kafka-2
      - target-zookeeper
    networks:
      - kafka-network
    volumes:
      - ./mirror-maker-config:/etc/kafka/mirror-maker-config
    environment:
      KAFKA_HEAP_OPTS: "-Xmx512M -Xms256M"
    command: bash -c 'kafka-mirror-maker --consumer.config /etc/kafka/mirror-maker-config/consumer.properties --producer.config /etc/kafka/mirror-maker-config/producer.properties --whitelist=products,search-products'

  shopapi:
    build:
      context: ./shopapi
    container_name: shopapi
    depends_on:
      - schema-registry
      - kafka-1
    ports:
      - 8085:8085
    networks:
      - kafka-network
  clientapi:
    build:
      context: ./clientapi
    container_name: clientapi
    depends_on:
      - kafka-1
      - elasticsearch
    ports:
      - 8086:8086
    networks:
      - kafka-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
      - ELASTIC_USERNAME=elastic
      - ELASTIC_PASSWORD=elastic
    ports:
      - "9200:9200"
    networks:
      - kafka-network
  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.2
    container_name: kibana
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"
    networks:
      - kafka-network
    environment:
      ELASTICSEARCH_HOSTS: "http://elasticsearch:9200"

  hadoop-namenode:
    image: apache/hadoop:3.4.1
    container_name: hadoop-namenode
    hostname: hadoop-namenode
    user: "root"
    restart: always
    platform: linux/amd64
    deploy:
      resources:
        limits:
          cpus: "1.0"   # Ограничение использования CPU
          memory: "2g"  # Ограничение использования RAM
    shm_size: 10G
    ports:
      - "9870:9870"  # HTTP-порт для Web UI HDFS NameNode
      - "9000:9000"  # RPC порт для запросов к NameNode
    networks:
      - kafka-network
    volumes:
      - ./hadoop/core-site.xml:/opt/hadoop/etc/hadoop/core-site.xml
      - ./hadoop/hdfs-site-namenode.xml:/opt/hadoop/etc/hadoop/hdfs-site.xml
      - ./hadoop/namenode_entrypoint.sh:/namenode_entrypoint.sh
    entrypoint: ["/bin/bash", "/namenode_entrypoint.sh"]
    command: ["hdfs", "namenode"]
  hadoop-datanode-1:
    image: apache/hadoop:3.4.1
    container_name: hadoop-datanode-1
    hostname: hadoop-datanode-1
    user: "root"
    restart: always
    platform: linux/amd64
    deploy:
      resources:
        limits:
          cpus: "1.0"   # Ограничение использования CPU
          memory: "2g"  # Ограничение использования RAM
    shm_size: 10G
    depends_on:
      - hadoop-namenode
    ports:
      - "9864:9864"  # HTTP-порт для Web UI DataNode №1
      - "9970:9970"  # RPC порт для запросов от NameNode
    networks:
      - kafka-network
    volumes:
      - ./hadoop/core-site.xml:/opt/hadoop/etc/hadoop/core-site.xml
      - ./hadoop/hdfs-site-datanode-1.xml:/opt/hadoop/etc/hadoop/hdfs-site.xml
      - ./hadoop/datanode_entrypoint.sh:/datanode_entrypoint.sh
    entrypoint: ["/bin/bash", "/datanode_entrypoint.sh"]
    command: ["hdfs", "datanode"]
  hadoop-datanode-2:
    image: apache/hadoop:3.4.1
    container_name: hadoop-datanode-2
    hostname: hadoop-datanode-2
    user: "root"
    restart: always
    platform: linux/amd64
    deploy:
      resources:
        limits:
          cpus: "1.0"   # Ограничение использования CPU
          memory: "2g"  # Ограничение использования RAM
    shm_size: 10G
    depends_on:
      - hadoop-namenode
    ports:
      - "9865:9865"  # HTTP-порт для Web UI DataNode №2
      - "9971:9971"  # RPC порт для запросов от NameNode
    networks:
      - kafka-network
    volumes:
      - ./hadoop/core-site.xml:/opt/hadoop/etc/hadoop/core-site.xml
      - ./hadoop/hdfs-site-datanode-2.xml:/opt/hadoop/etc/hadoop/hdfs-site.xml
      - ./hadoop/datanode_entrypoint.sh:/datanode_entrypoint.sh
    entrypoint: ["/bin/bash", "/datanode_entrypoint.sh"]
    command: ["hdfs", "datanode"]
  hadoop-datanode-3:
    image: apache/hadoop:3.4.1
    container_name: hadoop-datanode-3
    hostname: hadoop-datanode-3
    user: "root"
    restart: always
    platform: linux/amd64
    deploy:
      resources:
        limits:
          cpus: "1.0"   # Ограничение использования CPU
          memory: "2g"  # Ограничение использования RAM
    shm_size: 10G
    depends_on:
      - hadoop-namenode
    ports:
      - "9866:9866"  # HTTP-порт для Web UI DataNode №3
      - "9972:9972"  # RPC порт для запросов от NameNode
    networks:
      - kafka-network
    volumes:
      - ./hadoop/core-site.xml:/opt/hadoop/etc/hadoop/core-site.xml
      - ./hadoop/hdfs-site-datanode-3.xml:/opt/hadoop/etc/hadoop/hdfs-site.xml
      - ./hadoop/datanode_entrypoint.sh:/datanode_entrypoint.sh
    entrypoint: ["/bin/bash", "/datanode_entrypoint.sh"]
    command: ["hdfs", "datanode"]
  hadoopapi:
    build:
      context: ./hadoop
    container_name: hadoopapi
    depends_on:
      - hadoop-namenode
      - target-kafka-1
    ports:
      - 8087:8087
    networks:
      - kafka-network

  streamprocessing:
    build:
      context: ./streamprocessing
    container_name: streamprocessing
    depends_on:
      - kafka-1
    networks:
      - kafka-network

  kafka-connect:
    image: confluentinc/cp-kafka-connect:latest
    container_name: kafka-connect
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka-0:9010
      CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect
      CONNECT_GROUP_ID: "quickstart"
      CONNECT_CONFIG_STORAGE_TOPIC: "connect-configs"
      CONNECT_OFFSET_STORAGE_TOPIC: "connect-offsets"
      CONNECT_STATUS_STORAGE_TOPIC: "connect-status"
      CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.storage.StringConverter"
      CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.storage.StringConverter"
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_REST_PORT: 8083
      CONNECT_PLUGIN_PATH: /usr/share/java,/etc/kafka-connect/jars

      CONNECT_SECURITY_PROTOCOL: SASL_SSL
      CONNECT_SASL_MECHANISM: PLAIN
      CONNECT_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.plain.PlainLoginModule required username='admin' password='admin-secret';"
      CONNECT_SSL_TRUSTSTORE_LOCATION: /etc/kafka-connect/secrets/kafka.kafka-0.truststore.jks
      CONNECT_SSL_TRUSTSTORE_PASSWORD: kafka-0
      CONNECT_SSL_KEYSTORE_LOCATION: /etc/kafka-connect/secrets/kafka.kafka-0.keystore.pkcs12
      CONNECT_SSL_KEYSTORE_PASSWORD: kafka-0

      CONNECT_CONSUMER_SECURITY_PROTOCOL: SASL_SSL
      CONNECT_CONSUMER_SASL_MECHANISM: PLAIN
      CONNECT_CONSUMER_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.plain.PlainLoginModule required username='admin' password='admin-secret';"
      CONNECT_CONSUMER_SSL_TRUSTSTORE_LOCATION: /etc/kafka-connect/secrets/kafka.kafka-0.truststore.jks
      CONNECT_CONSUMER_SSL_TRUSTSTORE_PASSWORD: kafka-0
      CONNECT_CONSUMER_SSL_KEYSTORE_LOCATION: /etc/kafka-connect/secrets/kafka.kafka-0.keystore.pkcs12
      CONNECT_CONSUMER_SSL_KEYSTORE_PASSWORD: kafka-0
    depends_on:
      - kafka-0  
      - kafka-1
      - kafka-2
      - schema-registry
    volumes:
      - ./creds/kafka-0-creds:/etc/kafka-connect/secrets
      #- ./kafka-connect/create-connector.sh:/etc/kafka-connect/create-connector.sh
      - ./kafka-connect/connect-file-3.9.0.jar:/etc/kafka-connect/jars/connect-file-3.9.0.jar
    #entrypoint: ["sh", "-c", "/etc/confluent/docker/run & sh /etc/kafka-connect/create-connector.sh && wait"]
    networks:
      - kafka-network
  kafka-connect-init:
    image: alpine:latest
    container_name: kafka-connect-init
    depends_on:
      - kafka-connect
    networks:
      - kafka-network
    volumes:
      - ./kafka-connect/create-connector.sh:/etc/kafka-connect/create-connector.sh
    entrypoint: ["sh", "-c", "apk add --no-cache curl && sh /etc/kafka-connect/create-connector.sh"]

volumes:
  data-zookeeper-log-1:
  data-zookeeper-data-1:
  data-kafka-0:
  data-kafka-1:
  data-kafka-2:
  target-data-zookeeper-log-1:
  target-data-zookeeper-data-1:
  target-data-kafka-0:
  target-data-kafka-1:
  target-data-kafka-2:

networks:
  kafka-network:
    